services:
  web:
    image: mmastrac/progscrape:latest
    ports:
      - 3000
    networks:
      full-internet:
        aliases:
          - server
    environment:
      - SERVER_LOG=debug,tantivy=info,hyper::proto=info
    command: /usr/local/bin/progscrape-web serve --listen-port 0.0.0.0:3000 --backup-path /var/progscrape/index/backup --persist-path /var/progscrape/index/db --root /var/progscrape/ --auth-header 'cf-access-authenticated-user-email'
    volumes:
      - type: volume
        source: index-data
        target: /var/progscrape/index
        volume:
          nocopy: true
  cloudflare:
    image: cloudflare/cloudflared:latest
    environment:
      - TUNNEL_ORIGIN_CERT=/run/secrets/cloudflare-cert
      - TUNNEL_CRED_FILE=/run/secrets/cloudflare-tunnel
      - TUNNEL_URL=http://server:3000/
    command: tunnel --no-autoupdate run progscrape-rpi-4
    secrets:
      - cloudflare-cert
      - cloudflare-tunnel
    networks:
      full-internet:

  github-runner:
    image: myoung34/github-runner:latest
    restart: always
    environment:
      REPO_URL: https://github.com/mmastrac/progscrape
      RUNNER_NAME: progscrape-docker-compose
      RUNNER_WORKDIR: /tmp/work
      RUNNER_SCOPE: 'repo'
      EPHEMERAL: 1
      LABELS: management,linux,ARM64
    # This image doesn't support docker compose yet, nor passing runner token as a secret but this gives us both
    entrypoint: sh -c 'apt-get install docker-compose-plugin && RUNNER_TOKEN=`cat /var/run/secrets/github-access-token` /entrypoint.sh "./bin/Runner.Listener" "run" "--startuptype" "service"'
    secrets:
      - github-access-token
    security_opt:
      # needed on SELinux systems to allow docker container to manage other docker containers
      - label:disable
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

secrets:
  cloudflare-cert:
    file: ".cloudflared/cert.pem"
  cloudflare-tunnel:
    file: ".cloudflared/tunnel.json"
  github-access-token:
    file: "./github-pat"

networks:
  full-internet: {}

volumes:
  index-data:

